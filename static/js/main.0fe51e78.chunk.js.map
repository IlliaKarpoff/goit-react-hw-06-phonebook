{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","base/defaultContacts.js","redux/contacts-actions.js","redux/contacts-reducer.js","redux/store.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","defaultContacts","id","name","phone","deleteContacts","createAction","changeFilter","addContacts","payload","uuid","contactsReducer","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","filterReducer","_","combineReducers","contacts","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","Section","children","title","ContactsForm","useState","setName","setPhone","useSelector","dispatch","useDispatch","handleSubmit","e","preventDefault","map","includes","isAdded","alert","onAddContacts","className","s","form","onSubmit","htmlFor","input","type","value","onChange","target","disabled","ContactsList","filterContacts","toLowerCase","filteredContacts","nameText","onClick","onDeleteBtn","Filter","text","connect","useEffect","setItem","stringify","container","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fe51e78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3udr1\",\"input\":\"ContactForm_input__9lWuZ\",\"button\":\"ContactForm_button__1oF5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1_Wp7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameText\":\"ContactList_nameText__31Dq7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__2fiFR\"};","const defaultContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\r\n];\r\n\r\nexport default defaultContacts;","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const deleteContacts = createAction('contacts/delete');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\nexport const addContacts = createAction('contacts/add', (name, phone) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    phone,\r\n  },\r\n}));","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport defaultContacts from '../base/defaultContacts';\r\nimport { changeFilter, addContacts, deleteContacts } from './contacts-actions';\r\n\r\nconst contactsReducer = createReducer(\r\n  JSON.parse(window.localStorage.getItem('contacts')) ?? defaultContacts,\r\n  {\r\n    [addContacts]: (state, { payload }) => [...state, payload],\r\n    [deleteContacts]: (state, { payload }) =>\r\n      state.filter(contact => {\r\n        return contact.id !== payload;\r\n      }),\r\n  },\r\n);\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport rootReducer from './contacts-reducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import propTypes from 'prop-types';\r\nexport default function Section({ children, title }) {\r\n  return (\r\n    <section>\r\n      {title ? <h2>{title}</h2> : null}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n};","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { addContacts } from '../../redux/contacts-actions';\r\n\r\nexport default function ContactsForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const { contacts } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddContacts = (name, phone) => dispatch(addContacts(name, phone));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isAdded = name =>\r\n      contacts.map(contact => contact.name).includes(name);\r\n\r\n    if (isAdded(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      onAddContacts(name, phone);\r\n    }\r\n\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={e => handleSubmit(e)}>\r\n        <label id=\"name\" htmlFor=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <label id=\"phone\" htmlFor=\"phone\">\r\n          Phone\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          id=\"phone\"\r\n          value={phone}\r\n          onChange={e => setPhone(e.target.value)}\r\n        />\r\n        <button type=\"submit\" disabled={!(name && phone)}>\r\n          add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onAddContacts: propTypes.func,\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContacts } from '../../redux/contacts-actions';\r\nimport propTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const { contacts, filter } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteBtn = id => dispatch(deleteContacts(id));\r\n\r\n  const filteredContacts = (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  const filterContacts = filteredContacts(contacts, filter);\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {filterContacts.map(({ id, name, phone }) => (\r\n          <li key={id}>\r\n            <p className={s.nameText}>\r\n              {name}: <span>{phone}</span>\r\n            </p>\r\n            <button type=\"button\" onClick={e => onDeleteBtn(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  onDeleteBtn: propTypes.func,\r\n  contacts: propTypes.arrayOf(\r\n    propTypes.exact({\r\n      id: propTypes.string,\r\n      name: propTypes.string,\r\n      phone: propTypes.string,\r\n    }),\r\n  ),\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChangeFilter = e => dispatch(changeFilter(e.target.value));\r\n  return (\r\n    <>\r\n      <label className={s.text} name=\"filter\" htmlFor=\"filter\" value={filter}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        value={filter}\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        onChange={handleChangeFilter}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport s from './App.module.css'\r\nimport Section from './components/Section/Section';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactsList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nfunction App({ contacts }) {\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\" className={s.container} >\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      {contacts.length ? (\r\n        <Section title=\"Contacts\" className={s.container} >\r\n          <Filter  />\r\n          <ContactsList />\r\n        </Section>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}